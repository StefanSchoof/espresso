jobs:
- job: node
  pool: Hosted Ubuntu 1604

  steps:
  - bash: ./dockerbuild.sh
    workingDirectory: node
    displayName: 'docker build'

  - task: Docker@0
    displayName: 'Push image build'
    inputs:
      containerregistrytype: 'Container Registry'
      dockerRegistryConnection: 'docker hub sschoof'
      action: 'Push an image'
      imageName: 'stefanschoof/espresso:build$(Build.BuildId)'

  - task: Docker@0
    displayName: 'Push image branch'
    inputs:
      containerregistrytype: 'Container Registry'
      dockerRegistryConnection: 'docker hub sschoof'
      action: 'Push an image'
      imageName: 'stefanschoof/espresso:$(branchname)'

  - task: Docker@0
    displayName: 'Push image cache node'
    inputs:
      containerregistrytype: 'Container Registry'
      dockerRegistryConnection: 'docker hub sschoof'
      action: 'Push an image'
      imageName: 'stefanschoof/espresso:build-cache-node'

  - task: Docker@0
    displayName: 'Push image cache cppbuilder'
    inputs:
      containerregistrytype: 'Container Registry'
      dockerRegistryConnection: 'docker hub sschoof'
      action: 'Push an image'
      imageName: 'stefanschoof/espresso:build-cache-cppbuilder'

  - task: Docker@0
    displayName: 'Push image cache builder'
    inputs:
      containerregistrytype: 'Container Registry'
      dockerRegistryConnection: 'docker hub sschoof'
      action: 'Push an image'
      imageName: 'stefanschoof/espresso:build-cache-builder'

  - task: CopyFiles@2
    displayName: 'Copy Files to staging'
    inputs:
      SourceFolder: 'node'
      Contents: |
        docker-compose.yml
        pideploy.sh
      TargetFolder: '$(build.artifactstagingdirectory)/node'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: node'
    inputs:
      PathtoPublish: '$(build.artifactstagingdirectory)/node'
      ArtifactName: node

- job: function
  displayName: function
  pool: Hosted Ubuntu 1604

  steps:
  - bash: |
     npm install
     npm test
     npm run build
     npm run lint
    workingDirectory: func
    displayName: 'Build'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: func'
    inputs:
      PathtoPublish: func/dist
      ArtifactName: func

- job: web
  pool: Hosted Ubuntu 1604

  steps:
  - bash: |
     npm install
     npm test
     npm run build
     npm run lint
    workingDirectory: web
    displayName: 'Build'
    env:
      FUNCTIONS_CODE: $(functions.code)

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: web'
    inputs:
      PathtoPublish: web/dist
      ArtifactName: web

- job: iac
  pool: Hosted Ubuntu 1604

  steps:
  - task: DownloadSecureFile@1
    displayName: 'Download secure file'
    inputs:
      secureFile: 'df843c96-fc0e-409f-b3fd-f5a318bee16b'

  - task: DownloadSecureFile@1
    displayName: 'Download secure file'
    inputs:
      secureFile: 'c93bf295-33c5-4902-bab1-0f0e9f2b5b11'

  - bash: ./plan.sh
    workingDirectory: terraform
    displayName: 'Plan'

  - task: CopyFiles@2
    displayName: 'Copy Files to staging'
    inputs:
      SourceFolder: 'terraform'
      Contents: |
        *.tf
        *.sh
      TargetFolder: '$(build.artifactstagingdirectory)/terraform'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: terraform'
    inputs:
      PathtoPublish: '$(build.artifactstagingdirectory)/terraform'
      ArtifactName: terraform
